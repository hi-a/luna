#!/bin/bash
set -e
NEED_UMOUNT_DEV=1
NEED_UMOUNT_SYS=1
NEED_UMOUNT_PROC=1

function clean {
    [ -z $CHROOT_PATH ] && return 0
    [ $NEED_UMOUNT_DEV -eq 1 ] && umount -f $CHROOT_PATH/dev
    [ $NEED_UMOUNT_PROC -eq 1 ] && umount -f $CHROOT_PATH/proc
    [ $NEED_UMOUNT_SYS -eq 1 ] && umount -f $CHROOT_PATH/sys
    rm -f $CHROOT_PATH/tmp/lchroot.lock
}

function mount_d {
    mount -t devtmpfs devtmpfs  $CHROOT_PATH/dev  2>/dev/null || NEED_UMOUNT_DEV=0
    mount -t sysfs    sysfs     $CHROOT_PATH/sys  2>/dev/null || NEED_UMOUNT_SYS=0
    mount -t proc     proc      $CHROOT_PATH/proc 2>/dev/null || NEED_UMOUNT_PROC=0
}

function show_help {
    echo "usage: luna [-h|--help|--usage] osimage"
}

PARM=$1
if [ \
        "x${PARM}" = "x" \
        -o "x${PARM}" = "x-h" \
        -o "x${PARM}" = "x--help" \
        -o "x${PARM}" = "x--usage" \
    ]; then
    show_help
    exit 7
fi

OSIMAGE=$PARM
if ! python -c "import luna; print '\n'.join(luna.list('osimage'))" | grep -q ${OSIMAGE}; then
    echo "No such image '${OSIMAGE}'"
    echo "Type 'luna osimage list' to get the list."
    exit 7
fi

FAKE_KERN=$(luna osimage show $OSIMAGE --kernver | awk '$2~/<=/{print $1}')
CHROOT_PATH=$(luna osimage show $OSIMAGE --path)

echo "IMAGE PATH: $CHROOT_PATH"
if [ -f $CHROOT_PATH/tmp/lchroot.lock ]; then
    TMP=$(cat $CHROOT_PATH/tmp/lchroot.lock)
    echo "File $CHROOT_PATH/tmp/lchroot.lock exists."
    echo "Currently ${TMP} is using lchroot. Exiting."
    exit 8
fi

CUR_TTY=$(tty || echo non-interactive)
CUR_PID=$$
echo "PID ${CUR_PID} on ${CUR_TTY}" > $CHROOT_PATH/tmp/lchroot.lock

trap clean EXIT
mount_d
shift

chroot $CHROOT_PATH env -i FAKE_KERN=$FAKE_KERN LD_PRELOAD=libluna-fakeuname.so /bin/bash --rcfile <(echo "PS1=\"chroot [\u@$OSIMAGE \W]\$ \"") -i ${@:+-c $@}
